/* the whole deal could be done in R, allowing canning! */

# Graph collapse vs. cycle outcomes for various initial graph sizes, machine C
(see collVcyc.R)


/* C Total iterations for cycling outcomes */
psql model_c {
    select initnrnodes, nriterations, cyclelength into cyc from  s where machinetype = 'C' and cyclelength > 0;
} R {
    ggplot() + geom_freqpoly(data=cyc, mapping=aes(x=nriterations, color=factor(initnrnodes)), binwidth=1) +
        coord_cartesian(xlim=c(0, 25))
}

/* C Cycle length for cycling outcomes */
R {
    ggplot() + geom_freqpoly(data=cyc, mapping=aes(x=cyclelength, color=factor(initnrnodes)), binwidth=1) +
        coord_cartesian(xlim=c(0, 15))
}

/* C Total iterations for collapsing outcomes */
psql model_c {
    select initnrnodes, nriterations, cyclelength into coll from s where machinetype = 'C' and cyclelength = -1;
} R {
    ggplot() + geom_freqpoly(data=cyc, mapping=aes(x=nriterations, color=factor(initnrnodes)), binwidth=1) +
        coord_cartesian(xlim=c(0, 25))
}

/* C Cycle length vs total iterations for cycling outcomes (scatter) */
R {
ggplot(data=cyc) +
    geom_point(mapping=aes(x=cyclelength, y=nriterations, color=initnrnodes), pch=".", position="jitter") +
    coord_cartesian(xlim=c(0, 15), ylim=c(0, 25))
}

/* R Distribution of total iterations, random (collapsing) outcomes */
/* (gives a strange bow tie with some negative iteration counts shown??? */
R {
ggplot(data=filter(sd, machinetype=='R')) + geom_freqpoly(mapping=aes(x=nriterations, color=factor(initnrnodes)), binwidth=10)
}

/* C Distribution of terminal node counts, cycling outcomes */
R {

ggplot(data=filter(sd, machinetype=='C', cyclelength>0)) + geom_freqpoly(mapping=aes(x=nrnodes, color=factor(initnrnodes)), binwidth=10)
}

/* C Distribution of terminal node counts, collapsing outcomes */
R {
ggplot(data=filter(sd, machinetype=='C', cyclelength==-1)) + geom_freqpoly(mapping=aes(x=nrnodes, color=factor(initnrnodes)), binwidth=10)
}

/* R Distribution of terminal node counts, random (collapsing) outcomes */
R {
ggplot(data=filter(sd, machinetype=='R', cyclelength==-1)) + geom_freqpoly(mapping=aes(x=nrnodes, color=factor(initnrnodes)), binwidth=10)
}

/* Entropy distribution: C cycling, C collapsing, R [collapsing] */
/* (this one's in a raw state) */
ggplot(data=filter(sd1024, cyclelength > 0)) +
+ geom_freqpoly(mapping=aes(x=indegreeentropy), binwidth=0.01, color="blue") +
+ geom_freqpoly(data=filter(sd1024, cyclelength == -1), mapping=aes(x=indegreeentropy), binwidth=0.01, color="red") +
+ facet_wrap(~ machinetype)

/* nrIterations X terminal nrNodes, C vs R */
ggplot(data=sd1024) +
+ geom_point(mapping=aes(x=nriterations, y=nrnodes, color=machinetype)) +
+ coord_cartesian(xlim=c(0, 256)) # note the zoom-in

/* terminal node counts in collapsing outcomes, C vs R THIS ONE IS INTERESTING */
ggplot(data=filter(sd1024, cyclelength == -1)) +
+  geom_freqpoly(mapping=aes(x=nrnodes, color=machinetype), binwidth=10)

/* terminal node counts vs entropy, C & R THIS ONE TOO! (also interesting is nrindegrees vs entropy, others */
ggplot(data=filter(sd1024)) + geom_point(mapping=aes(x=indegreeentropy, y=nrnodes, color=machinetype))

/* "stepdown" charts for random machine, 512 nodes, 10 iterations */
ggplot(data=sdx) + geom_step(mapping=aes(x=iterationnr, y=indegreeentropy)) + facet_wrap(~ ruleid)
(or use y=nrnodes, saved initial charts in r_stepdown_{nrnodes, entropy})
