29Apr2018

To provision for generating netaut/hellosnap:

- (install git, vim)

- git config --global push.default simple

- sudo apt install libpng-dev

- download graphviz...gz
-   gunzip ...gz
-   tar xvf ...tar
-   cd graphviz...
-   ./configure
-   make
-   sudo make install
- clone SNAP from Github into ~/snap
-   make all

- sudo apt install gnuplot

- (for graph-tool)
-   add to /etc/apt/source-list
-   deb http://downloads.skewed.de/apt/xenial xenial universe
-   deb-src http://downloads.skewed.de/apt/xenial xenial universe
-   sudo apt install graph-tool

- install yEd
-   downloaded .sh install script, chmod +x
-   (also installs a JRE in the yEd dir, which must be writable
-   next time try sudo ...sh and place in /usr/bin?)

- install cmake >= v3.9
-   (uninstall < v3.9 if necessary)
-   from current source .tar: gunzip, tar xvf
-   make, sudo make install

- install leveldb
-   download from github
-   README => mkdir -p build && cd build
-   (see README for build commands)
-   manually sudo cp -r ~/leveldb/include/leveldb into /usr/local/include/
-   manually sudo cp ~/leveldb/build/libleveldb.a into /usr/local/lib/
-   use, e.g., #include <leveldb/db.h>

- install jsoncpp
-   clone from github
-   using the 'amalgamated' approach did not go smoothly (my err omitting -std=c++11, maybe)
-   generate lib with:
    cmake -DCMAKE_BUILD_TYPE=release -DBUILD_STATIC_LIBS=ON -DBUILD_SHARED_LIBS=OFF -DARCHIVE_INSTALL_DIR=. -G "Unix Makefiles" ..
    make
    sudo make install
-   use #include <json/json.h>
-   the install step places a copy of libjsoncpp.a in /usr/lib/local, which is typically in ld's default search path
        (if not, edit ~/etc/ld.so.conf, which refs include's in /etc/ld.so.conf.d/, then refresh cache w/ldconfig)
-   generate as in `g++ -std=c++11 myapp.cpp -ljsoncpp`

- do not forget -std=c++11

- set up virtualbox shared folders
    - vbox Devices menu: mount Guest Additions, autoruns in VM
    - if no autorun, run autorun.sh in (uoob guest) /media/richard/VBox...
    - restart uoob
    - using Virtualbox on Win, create shared folder ~/netaut/xfer, check "permanent" and "auto-mount"
    - restart uoob
    - use /media/sf_xfer at will
    - (was sudo adduser richard vboxsf necessary in there somewhere? unsure.)

- install postgres
    - sudo echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' >> /etc/apt/sources.list.d/pgdg.list
    (NOTE: I HAD TO USE SUDO VIM... TO ACCOMPLISH THE FOREGOING.)
    – Import the repository signing key, and update the package lists
    sudo? wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    # sudo apt-get update
    # sudo apt-get install postgresql-10
    - You can now start the database server using:
    /usr/lib/postgresql/10/bin/pg_ctl -D /var/lib/postgresql/10/main -l logfile start
    – After installing PostgreSQL database server, by default PostgreSQL, will create a
    system account user ‘postgres’ and a user named ‘postgres’ with role ‘postgres’.
    – To connect use the following commands:
    # sudo su - postgres
    # psql 
    - usage examples and more at ref:
    http://yallalabs.com/linux/how-to-install-and-use-postgresql-10-on-ubuntu-16-04/

- install mhash library
    - downloaded mhash from sourceforge
    - gunzip, tar xvf, ./configure, make

(Deferred enabling doxygen)
(Deferred enabling googletest to run SNAP's tests)
