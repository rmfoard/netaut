# prep_schema <schemaname> <source_dbname> <machine> <nr_nodes>
#
# Runs the query in <schemaname>.sql and prepares a batch of iteration details
# in the <schemaname> schema within <source_dbname>. The query must create
# a table named <schemaname>_ids containing two columns: 'rulenr' and 'randseed'.
#
schemaname=$1
dbname=$2
machine=$3
nrnodes=$4
echo "PREP> Creating and loading schema $1 under database $2 using the query in $1.sql:"
cat "$schemaname".sql
psql "$dbname" <<EOF
`cat "$schemaname".sql`
\copy ${schemaname}_ids to ${schemaname}_ids.txt (format csv, delimiter ' ')
drop table ${schemaname}_ids;
\quit
EOF
echo "PREP> The query yielded these rule numbers (& randseeds) for detailing in ${schemaname}:"
cat ${schemaname}_ids.txt
set -- `wc ${schemaname}_ids.txt`
# (note that the value of $1 is being re-established as the number of lines (which == the number of rule/randseed pairs))
nrids=$1
echo "PREP> Running simulations using:"
echo "dloop $machine --noop $nrnodes $nrids `expr $nrnodes '*' 2` random random `expr $nrnodes '*' 2` $schemaname ${schemaname}_ids.txt"
./dloop $machine --noop $nrnodes $nrids `expr $nrnodes '*' 2` random random `expr $nrnodes '*' 2` $schemaname "$schemaname"_ids.txt
# for testing convenience only:
echo "PREP> Created files:"
ls -l "$schemaname"_*.json
echo "PREP> Creating .csv files..."
python json_to_csv.py "$schemaname"
echo "PREP> Created files:"
ls -l "$schemaname"_*.csv
rm -v "$schemaname"_ids.txt
echo "PREP> Creating the $schemaname schema"
./create_schema $dbname $schemaname
echo "PREP> Adding details..."
./load_schema $dbname $schemaname
echo "PREP> Cleaning up..."
rm -v ${schemaname}_*.csv
rm -v ${schemaname}_*.json
echo "PREP> Finis."
